# compose dropin for loading ontologies from DBpedia Databus (e.g. via DBpedia Archivo) to a SPARQL endpoint to be used for indexing in Weaviate
version: '3.8'

services:
  # overwrite indexing definition to use virtuoso sparql endpoint for ontologies
  indexer:
    depends_on:
      - weaviate
      - sparql-store
    environment:
      SPARQL_ENDPOINT: http://sparql-store:8890/sparql

  # downloads ontologies from archivo via a user-configured Databus collection URI
  ontologies-downloader:
    profiles: [autoloading, downloading]
    image: dbpedia/dbpedia-databus-collection-downloader:latest
    env_file: compose-config.env 
    environment:
      COLLECTION_URI: ${COLLECTION_URI}
      TARGET_DIR: /root/data
      SPARQL_ENDPOINT: ${DATABUS_SPARQL_ENDPOINT}
    volumes:
      - ${DATA_DIR}:/root/data
  
  # virtuoso sparql endpoint for ontologies
  sparql-store: 
    profiles: [prepare-indexing, autoloading, loading, indexing]
    image: openlink/virtuoso-opensource-7
    # ports: ["${VIRTUOSO_HTTP_PORT}:8890","127.0.0.1:${VIRTUOSO_ISQL_PORT}:1111"] # only expose for debugging purposes
    env_file: compose-config.env
    environment:
            DBA_PASSWORD: ${VIRTUOSO_ADMIN_PASSWD:?Set VIRTUOSO_ADMIN_PASSWD in .env file or pass as environment variable e.g. VIRTUOSO_ADMIN_PASSWD=YourSecretPass docker-compose up}
    volumes:
      - ${VIRTUOSO_DATABASE_DIR}:/opt/virtuoso-opensource/database
      - ${DATA_DIR}:/usr/share/proj

  # loader to load ontologies from data folder into virtuoso sparql endpoint
  sparql-store-loader:
    profiles: [prepare-indexing, autoloading, loading]
    image: dbpedia/virtuoso-sparql-endpoint-quickstart:debian-bullseye-20241016
    depends_on:
      - sparql-store
    env_file: compose-config.env
    environment:
      STORE_DATA_DIR: /usr/share/proj
      STORE_DBA_PASSWORD: ${VIRTUOSO_ADMIN_PASSWD:?Set VIRTUOSO_ADMIN_PASSWD in .env file or pass as environment variable e.g. VIRTUOSO_ADMIN_PASSWD=YourSecretPass docker-compose up}
      STORE_ISQL_PORT: 1111
      DATA_DIR: /root/data
      # DOMAIN: ${DOMAIN}
      # DBP_LANG: ${DBP_LANG}
      # DBP_CATEGORY: ${DBP_CATEGORY}
    volumes:
      - ${DATA_DIR}:/root/data




